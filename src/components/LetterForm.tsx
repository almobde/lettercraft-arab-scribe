
import { useState } from 'react';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { LetterData } from '../types/letter';

interface LetterFormProps {
  letterData: LetterData;
  onChange: (data: LetterData) => void;
}

export const LetterForm = ({ letterData, onChange }: LetterFormProps) => {
  const handleInputChange = (field: keyof LetterData, value: string | boolean) => {
    onChange({
      ...letterData,
      [field]: value
    });
  };

  return (
    <div className="space-y-4">
      <div className="grid grid-cols-1 gap-4">
        <div>
          <Label htmlFor="recipientName" className="text-right block mb-2">
            ๐ ุงุณู ุงููุฑุณู ุฅููู
          </Label>
          <Input
            id="recipientName"
            value={letterData.recipientName}
            onChange={(e) => handleInputChange('recipientName', e.target.value)}
            placeholder="ูุซุงู: ุงูุฃุณุชุงุฐ ูุญูุฏ ุจู ูุงุตุฑ"
            className="text-right"
            dir="rtl"
          />
        </div>

        <div>
          <Label htmlFor="recipientTitle" className="text-right block mb-2">
            ๐ท๏ธ ุตูุชู ุฃู ูุธููุชู
          </Label>
          <Input
            id="recipientTitle"
            value={letterData.recipientTitle}
            onChange={(e) => handleInputChange('recipientTitle', e.target.value)}
            placeholder="ูุซุงู: ูุดุฑู ุชุฑุจูู"
            className="text-right"
            dir="rtl"
          />
        </div>

        <div>
          <Label htmlFor="occasion" className="text-right block mb-2">
            ๐ฏ ุงูููุงุณุจุฉ ุฃู ุงูุบุฑุถ ูู ุงูุฎุทุงุจ
          </Label>
          <Input
            id="occasion"
            value={letterData.occasion}
            onChange={(e) => handleInputChange('occasion', e.target.value)}
            placeholder="ูุซุงู: ุดูุฑ ุนูู ุฌููุฏู ูู ูุชุงุจุนุฉ ุงููุนูููู"
            className="text-right"
            dir="rtl"
          />
        </div>

        <div>
          <Label htmlFor="senderOrganization" className="text-right block mb-2">
            ๐ข ุงุณู ุงูุฌูุฉ ุงููุฑุณููุฉ
          </Label>
          <Input
            id="senderOrganization"
            value={letterData.senderOrganization}
            onChange={(e) => handleInputChange('senderOrganization', e.target.value)}
            placeholder="ูุซุงู: ุฅุฏุงุฑุฉ ุงูุชุนููู ุจูุญุงูุธุฉ ุงูุฎุฑุฌ"
            className="text-right"
            dir="rtl"
          />
        </div>

        <div>
          <Label htmlFor="senderName" className="text-right block mb-2">
            ๐งโ๐ผ ุงุณู ุงููุฑุณูู
          </Label>
          <Input
            id="senderName"
            value={letterData.senderName}
            onChange={(e) => handleInputChange('senderName', e.target.value)}
            placeholder="ูุซุงู: ูุฏูุฑ ุงูุฅุฏุงุฑุฉ - ุฎุงูุฏ ุงูุนุชูุจู"
            className="text-right"
            dir="rtl"
          />
        </div>

        <div>
          <Label className="text-right block mb-2">
            ๐จ ูุบูุฉ ุงูุฎุทุงุจ ุงููุทููุจุฉ
          </Label>
          <div className="grid grid-cols-2 gap-2">
            {(['ุฑุณููุฉ', 'ุชุญููุฒูุฉ', 'ุฃุฏุจูุฉ', 'ูุฏูุฉ'] as const).map((tone) => (
              <Button
                key={tone}
                variant={letterData.tone === tone ? 'default' : 'outline'}
                onClick={() => handleInputChange('tone', tone)}
                className="text-sm"
              >
                {tone}
              </Button>
            ))}
          </div>
        </div>

        <div className="space-y-3">
          <div className="flex items-center gap-3">
            <input
              type="checkbox"
              id="needsTranslation"
              checked={letterData.needsTranslation}
              onChange={(e) => handleInputChange('needsTranslation', e.target.checked)}
              className="w-4 h-4"
            />
            <Label htmlFor="needsTranslation" className="text-right">
              ๐ ูู ุชุฑุบุจ ุจุชุฑุฌูุฉ ุงูุฎุทุงุจุ
            </Label>
          </div>

          <div className="flex items-center gap-3">
            <input
              type="checkbox"
              id="needsCreativeVersion"
              checked={letterData.needsCreativeVersion}
              onChange={(e) => handleInputChange('needsCreativeVersion', e.target.checked)}
              className="w-4 h-4"
            />
            <Label htmlFor="needsCreativeVersion" className="text-right">
              โ๏ธ ูู ุชุฑุบุจ ุจุตูุบุฉ ุฅุจุฏุงุนูุฉ ูุฎุชููุฉ ููุฎุทุงุจุ
            </Label>
          </div>
        </div>
      </div>
    </div>
  );
};
